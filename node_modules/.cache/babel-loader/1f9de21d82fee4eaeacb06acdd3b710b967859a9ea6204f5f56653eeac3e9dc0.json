{"ast":null,"code":"var _jsxFileName = \"/Users/nabilbilnax/Desktop/encrypted-diary/src/components/NewEntry.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport CryptoJS from 'crypto-js';\nimport JournalContext from '../JournalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEntry = () => {\n  _s();\n  const {\n    addEntry\n  } = useContext(JournalContext);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = () => {\n    const encryptedContent = CryptoJS.AES.encrypt(content, password).toString();\n    const newEntry = {\n      id: Date.now(),\n      title,\n      content: encryptedContent,\n      encrypted: true\n    };\n    addEntry(newEntry);\n    setTitle('');\n    setContent('');\n    setPassword('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      placeholder: \"Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Add Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(NewEntry, \"2OnGjrukDDazMfPRuC8wa1PwRH0=\");\n_c = NewEntry;\nexport default NewEntry;\nvar _c;\n$RefreshReg$(_c, \"NewEntry\");","map":{"version":3,"names":["React","useState","useContext","CryptoJS","JournalContext","jsxDEV","_jsxDEV","NewEntry","_s","addEntry","title","setTitle","content","setContent","password","setPassword","handleSubmit","encryptedContent","AES","encrypt","toString","newEntry","id","Date","now","encrypted","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/nabilbilnax/Desktop/encrypted-diary/src/components/NewEntry.tsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport CryptoJS from 'crypto-js';\nimport JournalContext from '../JournalContext';\n\nconst NewEntry: React.FC = () => {\n  const { addEntry } = useContext(JournalContext)!;\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = () => {\n    const encryptedContent = CryptoJS.AES.encrypt(content, password).toString();\n    const newEntry = {\n      id: Date.now(),\n      title,\n      content: encryptedContent,\n      encrypted: true,\n    };\n    addEntry(newEntry);\n    setTitle('');\n    setContent('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <input value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\" />\n      <textarea value={content} onChange={(e) => setContent(e.target.value)} placeholder=\"Content\" />\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\n      <button onClick={handleSubmit}>Add Entry</button>\n    </div>\n  );\n};\n\nexport default NewEntry;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,cAAc,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAS,CAAC,GAAGP,UAAU,CAACE,cAAc,CAAE;EAChD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,gBAAgB,GAAGd,QAAQ,CAACe,GAAG,CAACC,OAAO,CAACP,OAAO,EAAEE,QAAQ,CAAC,CAACM,QAAQ,CAAC,CAAC;IAC3E,MAAMC,QAAQ,GAAG;MACfC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdd,KAAK;MACLE,OAAO,EAAEK,gBAAgB;MACzBQ,SAAS,EAAE;IACb,CAAC;IACDhB,QAAQ,CAACY,QAAQ,CAAC;IAClBV,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACdE,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBACET,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAOqB,KAAK,EAAEjB,KAAM;MAACkB,QAAQ,EAAGC,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtF7B,OAAA;MAAUqB,KAAK,EAAEf,OAAQ;MAACgB,QAAQ,EAAGC,CAAC,IAAKhB,UAAU,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/F7B,OAAA;MAAO8B,IAAI,EAAC,UAAU;MAACT,KAAK,EAAEb,QAAS;MAACc,QAAQ,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/G7B,OAAA;MAAQ+B,OAAO,EAAErB,YAAa;MAAAU,QAAA,EAAC;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA5BID,QAAkB;AAAA+B,EAAA,GAAlB/B,QAAkB;AA8BxB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}