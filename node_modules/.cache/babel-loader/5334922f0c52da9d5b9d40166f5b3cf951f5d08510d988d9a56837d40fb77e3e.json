{"ast":null,"code":"var _jsxFileName = \"/Users/nabilbilnax/Desktop/encrypted-diary/src/components/PasswordComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordComponent = ({\n  onEncrypt,\n  onDecrypt,\n  encryptedText\n}) => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleEncrypt = () => {\n    const encrypted = CryptoJS.AES.encrypt(message, password).toString();\n    onEncrypt(encrypted);\n  };\n  const handleDecrypt = () => {\n    const bytes = CryptoJS.AES.decrypt(encryptedText, password);\n    const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n    onDecrypt(decrypted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Mot de passe\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEncrypt,\n      children: \"Encrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), encryptedText && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDecrypt,\n      children: \"Decrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordComponent, \"P7DbJeeDGJoAhYJjeYykHFD7JrY=\");\n_c = PasswordComponent;\nexport default PasswordComponent;\nvar _c;\n$RefreshReg$(_c, \"PasswordComponent\");","map":{"version":3,"names":["React","useState","CryptoJS","jsxDEV","_jsxDEV","PasswordComponent","onEncrypt","onDecrypt","encryptedText","_s","password","setPassword","message","setMessage","handleEncrypt","encrypted","AES","encrypt","toString","handleDecrypt","bytes","decrypt","decrypted","enc","Utf8","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/nabilbilnax/Desktop/encrypted-diary/src/components/PasswordComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CryptoJS from 'crypto-js';\n\ninterface PasswordComponentProps {\n  onEncrypt: (encryptedText: string) => void;\n  onDecrypt: (decryptedText: string) => void;\n  encryptedText?: string;\n}\n\nconst PasswordComponent: React.FC<PasswordComponentProps> = ({ onEncrypt, onDecrypt, encryptedText }) => {\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleEncrypt = () => {\n    const encrypted = CryptoJS.AES.encrypt(message, password).toString();\n    onEncrypt(encrypted);\n  };\n\n  const handleDecrypt = () => {\n    const bytes = CryptoJS.AES.decrypt(encryptedText!, password);\n    const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n    onDecrypt(decrypted);\n  };\n\n  return (\n    <div>\n      <input type=\"password\" placeholder=\"Mot de passe\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <textarea placeholder=\"Message\" value={message} onChange={(e) => setMessage(e.target.value)} />\n      <button onClick={handleEncrypt}>Encrypt</button>\n      {encryptedText && <button onClick={handleDecrypt}>Decrypt</button>}\n    </div>\n  );\n};\n\nexport default PasswordComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQjC,MAAMC,iBAAmD,GAAGA,CAAC;EAAEC,SAAS;EAAEC,SAAS;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACvG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,SAAS,GAAGb,QAAQ,CAACc,GAAG,CAACC,OAAO,CAACL,OAAO,EAAEF,QAAQ,CAAC,CAACQ,QAAQ,CAAC,CAAC;IACpEZ,SAAS,CAACS,SAAS,CAAC;EACtB,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,KAAK,GAAGlB,QAAQ,CAACc,GAAG,CAACK,OAAO,CAACb,aAAa,EAAGE,QAAQ,CAAC;IAC5D,MAAMY,SAAS,GAAGF,KAAK,CAACF,QAAQ,CAAChB,QAAQ,CAACqB,GAAG,CAACC,IAAI,CAAC;IACnDjB,SAAS,CAACe,SAAS,CAAC;EACtB,CAAC;EAED,oBACElB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAOsB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,cAAc;MAACC,KAAK,EAAElB,QAAS;MAACmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnH/B,OAAA;MAAUuB,WAAW,EAAC,SAAS;MAACC,KAAK,EAAEhB,OAAQ;MAACiB,QAAQ,EAAGC,CAAC,IAAKjB,UAAU,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/F/B,OAAA;MAAQgC,OAAO,EAAEtB,aAAc;MAAAW,QAAA,EAAC;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/C3B,aAAa,iBAAIJ,OAAA;MAAQgC,OAAO,EAAEjB,aAAc;MAAAM,QAAA,EAAC;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvBIJ,iBAAmD;AAAAgC,EAAA,GAAnDhC,iBAAmD;AAyBzD,eAAeA,iBAAiB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}