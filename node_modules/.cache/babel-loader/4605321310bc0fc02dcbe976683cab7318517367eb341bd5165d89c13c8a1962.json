{"ast":null,"code":"var _jsxFileName = \"/Users/nabilbilnax/Desktop/encrypted-diary/src/JournalContext.tsx\",\n  _s = $RefreshSig$();\n// src/JournalContext.tsx\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JournalContext = /*#__PURE__*/createContext(undefined);\nexport const JournalProvider = ({\n  children\n}) => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const addEntry = entry => {\n    setEntries([...entries, entry]);\n  };\n  const deleteEntry = id => {\n    setEntries(entries.filter(entry => entry.id !== id));\n  };\n  const updateEntry = updatedEntry => {\n    setEntries(entries.map(entry => entry.id === updatedEntry.id ? updatedEntry : entry));\n  };\n  return /*#__PURE__*/_jsxDEV(JournalContext.Provider, {\n    value: {\n      entries,\n      addEntry,\n      deleteEntry,\n      updateEntry\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(JournalProvider, \"QwXuxOBCVNdGQT4jCo9qBV+7uvY=\");\n_c = JournalProvider;\nexport default JournalContext;\nvar _c;\n$RefreshReg$(_c, \"JournalProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","JournalContext","undefined","JournalProvider","children","_s","entries","setEntries","addEntry","entry","deleteEntry","id","filter","updateEntry","updatedEntry","map","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nabilbilnax/Desktop/encrypted-diary/src/JournalContext.tsx"],"sourcesContent":["// src/JournalContext.tsx\nimport React, { createContext, useState, ReactNode } from 'react';\n\ninterface Entry {\n  id: number;\n  title: string;\n  content: string;\n  encrypted: boolean;\n}\n\ninterface JournalContextProps {\n  entries: Entry[];\n  addEntry: (entry: Entry) => void;\n  deleteEntry: (id: number) => void;\n  updateEntry: (entry: Entry) => void;\n}\n\nconst JournalContext = createContext<JournalContextProps | undefined>(undefined);\n\nexport const JournalProvider = ({ children }: { children: ReactNode }) => {\n  const [entries, setEntries] = useState<Entry[]>([]);\n\n  const addEntry = (entry: Entry) => {\n    setEntries([...entries, entry]);\n };\n\n  const deleteEntry = (id: number) => {\n    setEntries(entries.filter(entry => entry.id !== id));\n  };\n\n  const updateEntry = (updatedEntry: Entry) => {\n    setEntries(entries.map(entry => (entry.id === updatedEntry.id ? updatedEntry : entry)));\n  };\n\n  return (\n    <JournalContext.Provider value={{ entries, addEntry, deleteEntry, updateEntry }}>\n      {children}\n    </JournalContext.Provider>\n  );\n};\n\nexport default JournalContext;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBlE,MAAMC,cAAc,gBAAGJ,aAAa,CAAkCK,SAAS,CAAC;AAEhF,OAAO,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAU,EAAE,CAAC;EAEnD,MAAMU,QAAQ,GAAIC,KAAY,IAAK;IACjCF,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEG,KAAK,CAAC,CAAC;EAClC,CAAC;EAEA,MAAMC,WAAW,GAAIC,EAAU,IAAK;IAClCJ,UAAU,CAACD,OAAO,CAACM,MAAM,CAACH,KAAK,IAAIA,KAAK,CAACE,EAAE,KAAKA,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,MAAME,WAAW,GAAIC,YAAmB,IAAK;IAC3CP,UAAU,CAACD,OAAO,CAACS,GAAG,CAACN,KAAK,IAAKA,KAAK,CAACE,EAAE,KAAKG,YAAY,CAACH,EAAE,GAAGG,YAAY,GAAGL,KAAM,CAAC,CAAC;EACzF,CAAC;EAED,oBACET,OAAA,CAACC,cAAc,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEX,OAAO;MAAEE,QAAQ;MAAEE,WAAW;MAAEG;IAAY,CAAE;IAAAT,QAAA,EAC7EA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAAChB,EAAA,CApBWF,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AAsB5B,eAAeF,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}