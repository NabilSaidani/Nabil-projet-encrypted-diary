{"ast":null,"code":"var _jsxFileName = \"/Users/nabilbilnax/Desktop/encrypted-diary/src/JournalContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport CryptoJS from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const JournalContext = /*#__PURE__*/createContext({\n  entries: [],\n  addEntry: () => {},\n  deleteEntry: () => {}\n});\nexport function JournalProvider({\n  children\n}) {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const addEntry = (text, password) => {\n    const encryptedText = CryptoJS.AES.encrypt(text, password).toString();\n    setEntries([...entries, {\n      id: Date.now().toString(),\n      encryptedText\n    }]);\n  };\n  const deleteEntry = id => {\n    setEntries(entries.filter(entry => entry.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(JournalContext.Provider, {\n    value: {\n      entries,\n      addEntry,\n      deleteEntry\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(JournalProvider, \"QwXuxOBCVNdGQT4jCo9qBV+7uvY=\");\n_c = JournalProvider;\nvar _c;\n$RefreshReg$(_c, \"JournalProvider\");","map":{"version":3,"names":["React","createContext","useState","CryptoJS","jsxDEV","_jsxDEV","JournalContext","entries","addEntry","deleteEntry","JournalProvider","children","_s","setEntries","text","password","encryptedText","AES","encrypt","toString","id","Date","now","filter","entry","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nabilbilnax/Desktop/encrypted-diary/src/JournalContext.tsx"],"sourcesContent":["import React, { createContext, useState, ReactNode } from \"react\";\nimport CryptoJS from \"crypto-js\";\n\nexport const JournalContext = createContext<{\n  entries: { id: string; encryptedText: string }[];\n  addEntry: (text: string, password: string) => void;\n  deleteEntry: (id: string) => void;\n}>({\n  entries: [],\n  addEntry: () => {},\n  deleteEntry: () => {},\n});\n\nexport function JournalProvider({ children }: { children: ReactNode }) {\n  const [entries, setEntries] = useState<\n    { id: string; encryptedText: string }[]\n  >([]);\n\n  const addEntry = (text: string, password: string) => {\n    const encryptedText = CryptoJS.AES.encrypt(text, password).toString();\n    setEntries([...entries, { id: Date.now().toString(), encryptedText }]);\n  };\n\n  const deleteEntry = (id: string) => {\n    setEntries(entries.filter((entry) => entry.id !== id));\n  };\n\n  return (\n    <JournalContext.Provider value={{ entries, addEntry, deleteEntry }}>\n      {children}\n    </JournalContext.Provider>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAmB,OAAO;AACjE,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,OAAO,MAAMC,cAAc,gBAAGL,aAAa,CAIxC;EACDM,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC;EAClBC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAEF,OAAO,SAASC,eAAeA,CAAC;EAAEC;AAAkC,CAAC,EAAE;EAAAC,EAAA;EACrE,MAAM,CAACL,OAAO,EAAEM,UAAU,CAAC,GAAGX,QAAQ,CAEpC,EAAE,CAAC;EAEL,MAAMM,QAAQ,GAAGA,CAACM,IAAY,EAAEC,QAAgB,KAAK;IACnD,MAAMC,aAAa,GAAGb,QAAQ,CAACc,GAAG,CAACC,OAAO,CAACJ,IAAI,EAAEC,QAAQ,CAAC,CAACI,QAAQ,CAAC,CAAC;IACrEN,UAAU,CAAC,CAAC,GAAGN,OAAO,EAAE;MAAEa,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC;MAAEH;IAAc,CAAC,CAAC,CAAC;EACxE,CAAC;EAED,MAAMP,WAAW,GAAIW,EAAU,IAAK;IAClCP,UAAU,CAACN,OAAO,CAACgB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;EACxD,CAAC;EAED,oBACEf,OAAA,CAACC,cAAc,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,OAAO;MAAEC,QAAQ;MAAEC;IAAY,CAAE;IAAAE,QAAA,EAChEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B;AAAClB,EAAA,CAnBeF,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}