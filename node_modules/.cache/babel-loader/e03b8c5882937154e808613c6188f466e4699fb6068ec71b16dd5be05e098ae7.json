{"ast":null,"code":"var _jsxFileName = \"/Users/nabilbilnax/Desktop/encrypted-diary/src/components/PasswordComponent.tsx\",\n  _s = $RefreshSig$();\n// PasswordComponent.tsx\nimport React, { useState } from 'react';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordComponent = ({\n  onEncrypt,\n  onDecrypt,\n  encryptedText\n}) => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  // Crypter le message\n  const encryptMessage = () => {\n    if (!password || !message) {\n      alert('Mot de passe et message sont requis');\n      return;\n    }\n    const encrypted = CryptoJS.AES.encrypt(message, password).toString();\n    onEncrypt(encrypted);\n  };\n\n  // Décrypter le message\n  const decryptMessage = () => {\n    if (!password || !encryptedText) {\n      alert('Mot de passe et texte crypté sont requis');\n      return;\n    }\n    try {\n      const bytes = CryptoJS.AES.decrypt(encryptedText, password);\n      const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n      if (!decrypted) {\n        alert('Échec du décryptage. Vérifiez votre mot de passe.');\n      } else {\n        onDecrypt(decrypted);\n      }\n    } catch (error) {\n      alert('Erreur lors du décryptage.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"\\xC9crivez votre message ici\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Entrez un mot de passe\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: encryptMessage,\n      children: \"Crypter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decryptMessage,\n      children: \"D\\xE9crypter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordComponent, \"P7DbJeeDGJoAhYJjeYykHFD7JrY=\");\n_c = PasswordComponent;\nexport default PasswordComponent;\nvar _c;\n$RefreshReg$(_c, \"PasswordComponent\");","map":{"version":3,"names":["React","useState","CryptoJS","jsxDEV","_jsxDEV","PasswordComponent","onEncrypt","onDecrypt","encryptedText","_s","password","setPassword","message","setMessage","encryptMessage","alert","encrypted","AES","encrypt","toString","decryptMessage","bytes","decrypt","decrypted","enc","Utf8","error","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/nabilbilnax/Desktop/encrypted-diary/src/components/PasswordComponent.tsx"],"sourcesContent":["// PasswordComponent.tsx\nimport React, { useState } from 'react';\nimport CryptoJS from 'crypto-js';\n\ninterface PasswordComponentProps {\n  onEncrypt: (encryptedText: string) => void;\n  onDecrypt: (decryptedText: string) => void;\n  encryptedText: string;\n}\n\nconst PasswordComponent: React.FC<PasswordComponentProps> = ({ onEncrypt, onDecrypt, encryptedText }) => {\n  const [password, setPassword] = useState<string>('');\n  const [message, setMessage] = useState<string>('');\n\n  // Crypter le message\n  const encryptMessage = () => {\n    if (!password || !message) {\n      alert('Mot de passe et message sont requis');\n      return;\n    }\n    const encrypted = CryptoJS.AES.encrypt(message, password).toString();\n    onEncrypt(encrypted);\n  };\n\n  // Décrypter le message\n  const decryptMessage = () => {\n    if (!password || !encryptedText) {\n      alert('Mot de passe et texte crypté sont requis');\n      return;\n    }\n    try {\n      const bytes = CryptoJS.AES.decrypt(encryptedText, password);\n      const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n      if (!decrypted) {\n        alert('Échec du décryptage. Vérifiez votre mot de passe.');\n      } else {\n        onDecrypt(decrypted);\n      }\n    } catch (error) {\n      alert('Erreur lors du décryptage.');\n    }\n  };\n\n  return (\n    <div>\n      <textarea\n        placeholder=\"Écrivez votre message ici\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Entrez un mot de passe\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button onClick={encryptMessage}>Crypter</button>\n      <button onClick={decryptMessage}>Décrypter</button>\n    </div>\n  );\n};\n\nexport default PasswordComponent;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQjC,MAAMC,iBAAmD,GAAGA,CAAC;EAAEC,SAAS;EAAEC,SAAS;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACvG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;;EAElD;EACA,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACJ,QAAQ,IAAI,CAACE,OAAO,EAAE;MACzBG,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACF;IACA,MAAMC,SAAS,GAAGd,QAAQ,CAACe,GAAG,CAACC,OAAO,CAACN,OAAO,EAAEF,QAAQ,CAAC,CAACS,QAAQ,CAAC,CAAC;IACpEb,SAAS,CAACU,SAAS,CAAC;EACtB,CAAC;;EAED;EACA,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACV,QAAQ,IAAI,CAACF,aAAa,EAAE;MAC/BO,KAAK,CAAC,0CAA0C,CAAC;MACjD;IACF;IACA,IAAI;MACF,MAAMM,KAAK,GAAGnB,QAAQ,CAACe,GAAG,CAACK,OAAO,CAACd,aAAa,EAAEE,QAAQ,CAAC;MAC3D,MAAMa,SAAS,GAAGF,KAAK,CAACF,QAAQ,CAACjB,QAAQ,CAACsB,GAAG,CAACC,IAAI,CAAC;MACnD,IAAI,CAACF,SAAS,EAAE;QACdR,KAAK,CAAC,mDAAmD,CAAC;MAC5D,CAAC,MAAM;QACLR,SAAS,CAACgB,SAAS,CAAC;MACtB;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdX,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,oBACEX,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MACEwB,WAAW,EAAC,8BAA2B;MACvCC,KAAK,EAAEjB,OAAQ;MACfkB,QAAQ,EAAGC,CAAC,IAAKlB,UAAU,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFhC,OAAA;MACEiC,IAAI,EAAC,UAAU;MACfT,WAAW,EAAC,wBAAwB;MACpCC,KAAK,EAAEnB,QAAS;MAChBoB,QAAQ,EAAGC,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFhC,OAAA;MAAQkC,OAAO,EAAExB,cAAe;MAAAa,QAAA,EAAC;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDhC,OAAA;MAAQkC,OAAO,EAAElB,cAAe;MAAAO,QAAA,EAAC;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAlDIJ,iBAAmD;AAAAkC,EAAA,GAAnDlC,iBAAmD;AAoDzD,eAAeA,iBAAiB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}